[tool.poetry]
name = "fast-plate-ocr"
version = "0.1.0"
description = "Fast & Lightweight OCR for license plates."
authors = ["ankandrew <61120139+ankandrew@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
opencv-python = "^4.9.0.80"
matplotlib = "^3.8.3"
pandas = "^2.2.1"
numpy = "^1.26.4"
keras = "^3.0.5"
albumentations = "^1.4.1"
tensorboard = "^2.16.2"
torch = "^2.2.1"
click = "^8.1.7"
tensorflow = "^2.16.1"
pydantic = "^2.0.0"
pyyaml = "^6.0.1"
tf2onnx = "^1.16.1"
onnxruntime = "^1.17.1"

[tool.poetry.group.test.dependencies]
pytest = "*"

[tool.poetry.group.dev.dependencies]
mypy = "*"
ruff = "^0.3.1"
pandas-stubs = "^2.2.0.240218"
pylint = "^3.1.0"
types-pyyaml = "^6.0.12.20240311"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-unused-arguments
    "ARG",
    # Pylint
    "PL",
    # Perflint
    "PERF",
    # Ruff-specific rules
    "RUF",
    # pandas-vet
    "PD",
]
ignore = ["N812", "PLR2004", "PD011"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.format]
line-ending = "lf"

[tool.mypy]
disable_error_code = "import-untyped"

[tool.pylint.typecheck]
generated-members = ["cv2.*"]
signature-mutators = [
    "click.decorators.option",
    "click.decorators.argument",
    "click.decorators.version_option",
    "click.decorators.help_option",
    "click.decorators.pass_context",
    "click.decorators.confirmation_option"
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint."messages control"]
disable = ["missing-class-docstring", "missing-function-docstring"]

[tool.pylint.design]
max-args = 8

[tool.pylint.basic]
no-docstring-rgx = "^__|^test_"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
